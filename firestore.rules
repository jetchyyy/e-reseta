rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Get the user's document to check role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      // Allow public read of specific fields for patient registration page
      allow get: if true; // Anyone can read to display doctor info on registration page
      allow list: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if false;
    }

    // Reseta templates collection
    match /resetaTemplates/{userId} {
      allow read, write: if isOwner(userId) || isAdmin();
    }

    // Legacy templates collection (if still in use)
    match /templates/{templateId} {
      allow read, write: if request.auth != null && (
        request.resource.data.doctorUid == request.auth.uid || isAdmin()
      );
      allow read: if request.auth != null && (
        resource.data.doctorUid == request.auth.uid || isAdmin()
      );
    }

    // Prescriptions collection
    match /prescriptions/{prescriptionId} {
      allow create: if request.auth != null && (
        request.resource.data.doctorId == request.auth.uid || isAdmin()
      );
      
      allow read, update, delete: if request.auth != null && (
        resource.data.doctorId == request.auth.uid || isAdmin()
      );
    }

    // Patients collection - doctors can read/write their own patients
    match /patients/{patientId} {
      // Allow public creation (for patient self-registration)
      // The doctorUid field ensures data isolation
      allow create: if request.resource.data.doctorUid != null;
      
      // Allow read, update, delete if the patient belongs to the authenticated doctor
      allow read, update, delete: if request.auth != null && (
        resource.data.doctorUid == request.auth.uid || isAdmin()
      );
    }
    
    // Registration tokens collection - for time-limited registration links
    match /registrationTokens/{tokenId} {
      // Doctors can create and update their own tokens
      allow create, update: if request.auth != null && 
        request.resource.data.doctorUid == request.auth.uid;
      
      // Doctors can read their own tokens
      allow read: if request.auth != null && (
        resource.data.doctorUid == request.auth.uid || isAdmin()
      );
      
      // Allow public get (single document read) to validate tokens
      allow get: if true;
      
      // Doctors can delete their own tokens
      allow delete: if request.auth != null && (
        resource.data.doctorUid == request.auth.uid || isAdmin()
      );
    }
  }
}
